<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 remove="exit(event)" creationComplete="created(event)" initialize="init(event)" addedToStage="addedToStage(event)">
	<fx:Script>
		<![CDATA[
			import com.which.utils.Console;
			
			import mx.events.FlexEvent;
			
			
			public static var GO_BACK:String = "GO_BACK";
			
			[Bindable]
			protected var url:String="";
			protected var htmlLoader:HTMLLoader;
			protected var waitingForInit:Boolean = true;

			
			protected function exit(event:Event):void
			{
				
				trace("*** EXIT BrowerView ***");
				//this.webContainer.visible = false;
			}
			
			public function created(event:FlexEvent=null):void
			{
				this.addEventListener( Event.INIT, init);
			}
			protected function addedToStage(event:Event):void
			{
				// TODO Auto-generated method stub
				Console.log("*** Onstage BrowserView ***", this);
				
			}
			protected function checkInit( e:Event ):void
			{
				if (this.url!="" && waitingForInit)
				{
					this.open( this.url );
				}
				waitingForInit = false; 
			}
			public function init(event:Event=null):void
			{
				Console.log("*** INIT BrowserView ***", this);
				
				htmlLoader = new HTMLLoader();
				htmlLoader.cacheResponse=false;
				htmlLoader.useCache=false;
				URLRequestDefaults.manageCookies=true;	
				
			}

			
			public function open(url:String):void
			{
				this.url = url;
				
				Console.log("open "+url, this);
								
				htmlLoader.addEventListener( LocationChangeEvent.LOCATION_CHANGE, onURLChange );
				htmlLoader.addEventListener( LocationChangeEvent.LOCATION_CHANGING, onURLChanging );
				htmlLoader.addEventListener( Event.HTML_DOM_INITIALIZE, onURLCompleted);
				htmlLoader.addEventListener( Event.HTML_RENDER, onURLCompleted);
				htmlLoader.addEventListener( IOErrorEvent.STANDARD_ERROR_IO_ERROR, netError );
				htmlLoader.addEventListener( IOErrorEvent.NETWORK_ERROR, netError );
				htmlLoader.addEventListener( HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION, error );
				htmlLoader.load( new URLRequest( url ) );
				
			}
			protected function netError( e:IOErrorEvent ):void
			{
				status_label.text = "ERROR! "+e.text.toString();	
			}
			protected function error( e: HTMLUncaughtScriptExceptionEvent):void
			{	
				Console.log("Error: "+ e.exceptionValue.toString(), this);
				

					
				
			}
			protected function back( e:MouseEvent=null ):void
			{
				Console.log("BACK", this)
				//ExternalInterface.addCallback("closeWeb",  null);
				this.dispatchEvent( new Event( GO_BACK ));
				this.webContainer.visible = false;
			}
			protected function onURLChanging(e:LocationChangeEvent):void
			{
				Console.log("Changing:"+e.location,this);
				
			}
			protected function onURLChange(e:LocationChangeEvent):void
			{
				Console.log("onURLChanged "+e.location, this)
					
				//if(e.location.indexOf("which.co.uk") != -1) 
				{
			//	} else {
					// user navigating away from site
					
				}
			}
			protected function onDomReady( e:Event ):void
			{
				htmlLoader.alpha = 1;
			}
			protected function onURLRender( e:Event ):void
			{
				htmlLoader.alpha = 1
				Console.log("Render "+webContainer,this);
				
			}
			protected function onURLCompleted( e:Event ):void
			{
				if (!waitingForInit)
				{
					Console.log("Complete "+webContainer,this);
					
					status_label.text = "URL LOADING COMPLETE";
					webContainer.visible = true;
					if (!webContainer.contains( htmlLoader ) )
					{
						
					//	htmlLoader.alpha = .5;
						htmlLoader.width=this.stage.stageWidth;
						htmlLoader.height=this.stage.stageHeight;
						htmlLoader.scaleX=htmlLoader.scaleY=1;
						webContainer.addChild( htmlLoader );
					}
					backlbl.useHandCursor = backlbl.mouseEnabled = backlbl.buttonMode = true;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer width="100%" height="100%" id="container" borderAlpha="1" >
		
		<s:VGroup width="100%" height="100%" id="overlay" horizontalAlign="center" verticalAlign="middle">
			<s:Label id="status_label" includeInLayout="false" text="status" color="0x000000" />
			<s:Spacer height="20"/>
			<s:Label textAlign="center" text="Connecting..." fontSize="18" id="urlText" />
			<s:Label textAlign="center" text="{url}" fontSize="10" />
			<s:Label color="0x000000" text="LOADING - PLEASE WAIT" fontWeight="bold" click="back(event)" fontSize="10" />

		</s:VGroup>
		<mx:UIComponent id="webContainer" initialize="checkInit(event)" width="100%" height="100%" />
		<s:Label id="backlbl" text="RETURN TO TOUCHSCREEN" click="back(event)" backgroundColor="0x00000" color="0xFFFFFF" backgroundAlpha=".8" fontSize="16"
				 paddingBottom="8" paddingTop="8" paddingLeft="12" paddingRight="12" x="-2" y="100" />
	</s:BorderContainer>
</s:NavigatorContent>
